"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const routes_1 = require("./routes");
const config = require("./config");
const bodyParser = require("body-parser");
const express = require("express");
const cors_1 = require("./middlewares/cors");
const mongoose = require("mongoose");
const morgan = require("morgan");
mongoose.Promise = require('bluebird');
const app = express();
mongoose.connect(`mongodb://${config.DBUSER}:${config.DBPASSWORD}${config.DBHOST}`, {
    useMongoClient: true
});
app.use(cors_1.cors);
if (config.ENV === 'development') {
    app.use(morgan('dev'));
}
app.use(bodyParser.urlencoded({
    extended: false
}));
app.use(bodyParser.json({ limit: '50mb' }));
app.use('/api', routes_1.router);
app.listen(config.PORT, () => console.log(`server started: PORT: ${config.PORT} | ENV: ${config.ENV}`));
module.exports = app;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc2VydmVyL2FwcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHFDQUErQztBQUMvQyxtQ0FBbUM7QUFDbkMsMENBQTBDO0FBQzFDLG1DQUFtQztBQUNuQyw2Q0FBMEM7QUFDMUMscUNBQXNDO0FBQ3RDLGlDQUFpQztBQUNqQyxRQUFRLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUN2QyxNQUFNLEdBQUcsR0FBRyxPQUFPLEVBQUUsQ0FBQztBQUV0QixRQUFRLENBQUMsT0FBTyxDQUFDLGFBQWEsTUFBTSxDQUFDLE1BQU0sSUFBSSxNQUFNLENBQUMsVUFBVSxHQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBRTtJQUNoRixjQUFjLEVBQUUsSUFBSTtDQUN2QixDQUFDLENBQUM7QUFFSCxHQUFHLENBQUMsR0FBRyxDQUFDLFdBQUksQ0FBQyxDQUFDO0FBRWQsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsS0FBSyxhQUFhLENBQUMsQ0FBQyxDQUFDO0lBQy9CLEdBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7QUFDM0IsQ0FBQztBQUVELEdBQUcsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQztJQUMxQixRQUFRLEVBQUUsS0FBSztDQUNsQixDQUFDLENBQUMsQ0FBQztBQUNKLEdBQUcsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFDLEtBQUssRUFBRSxNQUFNLEVBQUMsQ0FBQyxDQUFDLENBQUM7QUFFMUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsZUFBUyxDQUFDLENBQUM7QUFFM0IsR0FBRyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMseUJBQXlCLE1BQU0sQ0FBQyxJQUFJLFdBQVcsTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUN4RyxNQUFNLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJvdXRlciBhcyBhcGlSb3V0ZXMgfSBmcm9tICcuL3JvdXRlcyc7XG5pbXBvcnQgKiBhcyBjb25maWcgZnJvbSAnLi9jb25maWcnO1xuaW1wb3J0ICogYXMgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5pbXBvcnQgKiBhcyBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgY29ycyB9IGZyb20gJy4vbWlkZGxld2FyZXMvY29ycyc7XG5pbXBvcnQgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xuaW1wb3J0ICogYXMgbW9yZ2FuIGZyb20gJ21vcmdhbic7XG5tb25nb29zZS5Qcm9taXNlID0gcmVxdWlyZSgnYmx1ZWJpcmQnKTtcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxubW9uZ29vc2UuY29ubmVjdChgbW9uZ29kYjovLyR7Y29uZmlnLkRCVVNFUn06JHtjb25maWcuREJQQVNTV09SRH0ke2NvbmZpZy5EQkhPU1R9YCwge1xuICAgIHVzZU1vbmdvQ2xpZW50OiB0cnVlXG59KTtcblxuYXBwLnVzZShjb3JzKTtcblxuaWYgKGNvbmZpZy5FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcbiAgICBhcHAudXNlKG1vcmdhbignZGV2JykpO1xufVxuXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7XG4gICAgZXh0ZW5kZWQ6IGZhbHNlXG59KSk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbih7bGltaXQ6ICc1MG1iJ30pKTtcblxuYXBwLnVzZSgnL2FwaScsIGFwaVJvdXRlcyk7XG5cbmFwcC5saXN0ZW4oY29uZmlnLlBPUlQsICgpID0+IGNvbnNvbGUubG9nKGBzZXJ2ZXIgc3RhcnRlZDogUE9SVDogJHtjb25maWcuUE9SVH0gfCBFTlY6ICR7Y29uZmlnLkVOVn1gKSk7XG5tb2R1bGUuZXhwb3J0cyA9IGFwcDsiXX0=